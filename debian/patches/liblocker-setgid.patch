--- debathena-liblocker-orig/afs.c	2007-04-19 23:35:16.000000000 -0400
+++ debathena-liblocker-edit/afs.c	2007-04-19 23:27:55.000000000 -0400
@@ -267,26 +267,20 @@
 
   /* Make sure nothing is already mounted on our mountpoint. */
   status = stat(at->mountpoint, &st2);
-  if (!status && st1.st_dev == st2.st_dev && st1.st_ino == st2.st_ino)
+  if (!status)
     {
-      locker__error(context, "%s: Locker is already attached.\n",
-		    at->name);
-      return LOCKER_EALREADY;
+      /* Assume the automounter took care of it */
     }
-  else if (!status || errno != ENOENT)
-    {
-      locker__error(context, "%s: Could not attach locker:\n"
-		    "Mountpoint %s is busy.\n", at->name, at->mountpoint);
-      return LOCKER_EMOUNTPOINTBUSY;
-    }
-
-  status = symlink(at->hostdir, at->mountpoint);
-  if (status < 0)
+  else
     {
-      locker__error(context, "%s: Could not attach locker:\n%s while "
+    status = symlink(at->hostdir, at->mountpoint);
+    if (status < 0)
+      {
+        locker__error(context, "%s: Could not attach locker:\n%s while "
 		    "symlinking %s to %s\n", at->name, strerror(errno),
 		    at->hostdir, at->mountpoint);
-      return LOCKER_EATTACH;
+        return LOCKER_EATTACH;
+      }
     }
 
   /* Find host that the locker is on, and update the attachent. */
@@ -311,7 +305,8 @@
 {
   int status;
 
-  status = unlink(at->mountpoint);
+  /* Let the automounter manage the symlink */
+  /* status = unlink(at->mountpoint);
   if (status < 0)
     {
       if (errno == ENOENT)
@@ -327,6 +322,7 @@
 	  return LOCKER_EDETACH;
 	}
     }
+  */
   return LOCKER_SUCCESS;
 }
 
--- debathena-liblocker-orig/attachtab.c	2007-04-19 23:35:16.000000000 -0400
+++ debathena-liblocker-edit/attachtab.c	2007-04-19 23:31:28.000000000 -0400
@@ -514,7 +514,7 @@
     return LOCKER_ENOMEM;
 
   omask = umask(0);
-  fd = open(path, O_CREAT | O_RDWR, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
+  fd = open(path, O_CREAT | O_RDWR, S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH);
   umask(omask);
   if (fd == -1)
     {
@@ -909,6 +909,7 @@
   int status;
   char *path;
   struct flock fl;
+  mode_t o_umask;
 
   /* If the attachtab is already locked (because we're reading a
    * subcomponent of a MUL locker, for instance), just record an
@@ -927,8 +928,10 @@
       return LOCKER_ENOMEM;
     }
 
-  *lock = open(path, O_CREAT | O_TRUNC | O_RDWR, S_IRUSR | S_IWUSR);
+  o_umask = umask(0);
+  *lock = open(path, O_CREAT | O_TRUNC | O_RDWR, S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP);
   free (path);
+  umask(o_umask);
   if (*lock < 0)
     {
       locker__error(context, "Could not open attachtab lock file: %s.\n",
--- debathena-liblocker-orig/mountpoint.c	2007-04-19 23:35:16.000000000 -0400
+++ debathena-liblocker-edit/mountpoint.c	2007-04-19 23:34:12.000000000 -0400
@@ -444,13 +444,16 @@
   int status;
   char *lock;
   struct flock fl;
+  mode_t o_umask;
 
   lock = locker__attachtab_pathname(context, LOCKER_LOCK, ".dirlock");
   if (!lock)
     return LOCKER_ENOMEM;
 
-  at->dirlockfd = open(lock, O_CREAT | O_RDWR, S_IWUSR | S_IRUSR);
+  o_umask = umask(0);
+  at->dirlockfd = open(lock, O_CREAT | O_RDWR, S_IWUSR | S_IRUSR | S_IWGRP | S_IRGRP);
   free(lock);
+  umask(o_umask);
   if (at->dirlockfd < 0)
     {
       at->dirlockfd = 0;
